name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  SERVICE: rawati-backend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: Prepare test
      run: make test-prepare

    - name: Test
      run: |
        sleep 10
        make test-start

    - name: Clean test
      if: always()
      run: make test-clean

  deploy-docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: Generate docs
      run: |
        go install github.com/swaggo/swag/cmd/swag@latest && go mod download
        make docs-gen

    - name: Deploy to heroku
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "rawatidocs"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "docs"
        usedocker: true

  deploy-service:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: GCP auth
      id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}
        region: asia-southeast1
        env_vars: |
          ENVIRONMENT=remote-development
          INSTANCE_CONNECTION_NAME=${{ secrets.INSTANCE_CONNECTION_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASS=${{ secrets.DB_PASS }}
          DB_NAME=${{ secrets.DB_NAME }}
          GCP_PROJECT=${{ secrets.GCP_PROJECT }}
        source: .
        flags: --timeout=10 --cpu-throttling --min-instances=1 --max-instances=1 --set-cloudsql-instances=${{ secrets.SQL_INSTANCE }}
